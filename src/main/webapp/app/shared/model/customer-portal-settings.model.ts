import { ProductSelectionOption } from 'app/shared/model/enumerations/product-selection-option.model';

export interface ICustomerPortalSettings {
  id?: number;
  shop?: string;
  orderFrequencyText?: string;
  totalProductsText?: string;
  nextOrderText?: string;
  statusText?: string;
  cancelSubscriptionBtnText?: string;
  noSubscriptionMessage?: string;
  subscriptionNoText?: string;
  updatePaymentMessage?: string;
  cardLastFourDigitText?: string;
  cardExpiryText?: string;
  cardHolderNameText?: string;
  cardTypeText?: string;
  paymentMethodTypeText?: string;
  cancelAccordionTitle?: string;
  paymentDetailAccordionTitle?: string;
  upcomingOrderAccordionTitle?: string;
  paymentInfoText?: string;
  updatePaymentBtnText?: string;
  nextOrderDateLbl?: string;
  statusLbl?: string;
  quantityLbl?: string;
  amountLbl?: string;
  orderNoLbl?: string;
  editFrequencyBtnText?: string;
  cancelFreqBtnText?: string;
  updateFreqBtnText?: string;
  pauseResumeSub?: boolean;
  changeNextOrderDate?: boolean;
  cancelSub?: boolean;
  changeOrderFrequency?: boolean;
  createAdditionalOrder?: boolean;
  manageSubscriptionButtonText?: string;
  editChangeOrderBtnText?: string;
  cancelChangeOrderBtnText?: string;
  updateChangeOrderBtnText?: string;
  editProductButtonText?: string;
  deleteButtonText?: string;
  updateButtonText?: string;
  cancelButtonText?: string;
  addProductButtonText?: string;
  addProductLabelText?: string;
  activeBadgeText?: string;
  closeBadgeText?: string;
  skipOrderButtonText?: string;
  productLabelText?: string;
  seeMoreDetailsText?: string;
  hideDetailsText?: string;
  productInSubscriptionText?: string;
  EditQuantityLabelText?: string;
  subTotalLabelText?: string;
  paymentNotificationText?: string;
  editProductFlag?: boolean;
  deleteProductFlag?: boolean;
  showShipment?: boolean;
  addAdditionalProduct?: boolean;
  successText?: string;
  cancelSubscriptionConfirmPrepaidText?: string;
  cancelSubscriptionConfirmPayAsYouGoText?: string;
  cancelSubscriptionPrepaidButtonText?: string;
  cancelSubscriptionPayAsYouGoButtonText?: string;
  upcomingFulfillmentText?: string;
  creditCardText?: string;
  endingWithText?: string;
  weekText?: string;
  dayText?: string;
  monthText?: string;
  yearText?: string;
  skipBadgeText?: string;
  queueBadgeText?: string;
  customerPortalSettingJson?: any;
  orderNoteFlag?: boolean;
  orderNoteText?: string;
  useUrlWithCustomerId?: boolean;
  expiredTokenText?: string;
  portalLoginLinkText?: string;
  productSelectionOption?: ProductSelectionOption;
  includeOutOfStockProduct?: boolean;
  customerIdText: string;
  helloNameText: string;
  goBackButtonText: string;
  openBadgeText: string;
  freezeOrderTillMinCycle: false;
  allowOrderNow?: boolean;
  enableEditAttributes?: boolean;
  minQtyToAllowDuringAddProduct?: number;
  allowSplitContract?: boolean;
  enableSwapProductVariant?: boolean;
  subscriptionIsStillPausedText?: string;
  discountMessageOnCancellation?: string;
  swapMessageOnCancellation?: string;
  giftMessageOnCancellation?: string;
  skipMessageOnCancellation?: string;
  changeDateMessageOnCancellation?: string;
  changeAddressMessageOnCancellation?: string;
  updateFrequencyMessageOnCancellation?: string;
  selectExistingProductButtonText?: string;
  enableRedirectMyAccountButton?: boolean;
  enableAllowOnlyOneDiscountCode?: boolean;
  enableRedirectToProductPage?: boolean;
}

export const defaultValue: Readonly<ICustomerPortalSettings> = {
  pauseResumeSub: false,
  changeNextOrderDate: false,
  cancelSub: false,
  changeOrderFrequency: false,
  createAdditionalOrder: false,
  editProductFlag: false,
  deleteProductFlag: false,
  showShipment: false,
  addAdditionalProduct: false,
  orderNoteFlag: false,
  useUrlWithCustomerId: false,
  includeOutOfStockProduct: false,
  updateShipmentBillingDate: false,
  discountCode: false,
  freezeOrderTillMinCycle: false,
  addOneTimeProduct: false,
  allowOrderNow: false,
  allowSplitContract: false,
  enableEditAttributes: false
};
